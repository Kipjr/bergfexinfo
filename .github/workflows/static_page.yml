 
# Simple workflow for deploying static content to GitHub Pages
name: Create artifact & Deploy static content to Pages

  
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  # Runs on release
  release:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ski-areas:
        description: 'Comma-separated list of ski areas'
        required: false
        default: 'silvretta-arena-ischgl,hochfuegen'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
   generate-json:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Restore node_modules cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      run: npm install jsdom jquery node-fetch
    - name: Run JavaScript file
      run: node bergfex.js ${{ github.event.inputs['ski-areas'] }}
    - name: Upload JSON files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: skidata
        path: |
          *.json
          !package-lock.json
          !package.json

   deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
           path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
